<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="kafka.server.AbstractFetcherThreadTest" tests="23" skipped="0" failures="0" errors="0" timestamp="2020-01-15T02:25:20" hostname="localhost" time="0.724">
  <properties/>
  <testcase name="testSimpleFetch" classname="kafka.server.AbstractFetcherThreadTest" time="0.045"/>
  <testcase name="testTruncateToHighWatermarkIfLeaderEpochInfoNotAvailable" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testFollowerFetchOutOfRangeHigh" classname="kafka.server.AbstractFetcherThreadTest" time="0.003"/>
  <testcase name="testFencedTruncation" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testRetryAfterUnknownLeaderEpochInLatestOffsetFetch" classname="kafka.server.AbstractFetcherThreadTest" time="0.105"/>
  <testcase name="testTruncateToEpochEndOffsetsDuringRemovePartitions" classname="kafka.server.AbstractFetcherThreadTest" time="0.003"/>
  <testcase name="testTruncationSkippedIfNoEpochChange" classname="kafka.server.AbstractFetcherThreadTest" time="0.002"/>
  <testcase name="testUnknownLeaderEpochInTruncation" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testConsumerLagRemovedWithPartition" classname="kafka.server.AbstractFetcherThreadTest" time="0.002"/>
  <testcase name="testFollowerFetchOutOfRangeLow" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testFencedOffsetResetAfterOutOfRange" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testUnknownLeaderEpochWhileFetching" classname="kafka.server.AbstractFetcherThreadTest" time="0.005"/>
  <testcase name="testLeaderEpochChangeDuringSuccessfulFetchEpochsFromLeader" classname="kafka.server.AbstractFetcherThreadTest" time="0.002"/>
  <testcase name="testTruncationThrowsExceptionIfLeaderReturnsPartitionsNotRequestedInFetchEpochs" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testFencedFetch" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testTruncateToHighWatermarkIfLeaderEpochRequestNotSupported" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testFetcherThreadHandlingPartitionFailureDuringAppending" classname="kafka.server.AbstractFetcherThreadTest" time="0.006"/>
  <testcase name="testMetricsRemovedOnShutdown" classname="kafka.server.AbstractFetcherThreadTest" time="0.118"/>
  <testcase name="testTruncateToHighWatermarkDuringRemovePartitions" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testFetcherThreadHandlingPartitionFailureDuringTruncation" classname="kafka.server.AbstractFetcherThreadTest" time="0.003"/>
  <testcase name="testLeaderEpochChangeDuringFencedFetchEpochsFromLeader" classname="kafka.server.AbstractFetcherThreadTest" time="0.001"/>
  <testcase name="testCorruptMessage" classname="kafka.server.AbstractFetcherThreadTest" time="0.002"/>
  <testcase name="testTruncation" classname="kafka.server.AbstractFetcherThreadTest" time="0.417"/>
  <system-out><![CDATA[[2020-01-15 10:25:20,569] ERROR [mock-fetcher]: Unexpected error occurred while processing data for partition topic1-0 at offset 0 (kafka.server.AbstractFetcherThreadTest$$anon$11:76)
org.apache.kafka.common.KafkaException
	at kafka.server.AbstractFetcherThreadTest$$anon$11.processPartitionData(AbstractFetcherThreadTest.scala:742)
	at kafka.server.AbstractFetcherThread.$anonfun$processFetchRequest$7(AbstractFetcherThread.scala:316)
	at kafka.server.AbstractFetcherThread.$anonfun$processFetchRequest$6(AbstractFetcherThread.scala:305)
	at kafka.server.AbstractFetcherThread.$anonfun$processFetchRequest$6$adapted(AbstractFetcherThread.scala:304)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:159)
	at kafka.server.AbstractFetcherThread.$anonfun$processFetchRequest$5(AbstractFetcherThread.scala:304)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:304)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.server.AbstractFetcherThreadTest.verifyFetcherThreadHandlingPartitionFailure(AbstractFetcherThreadTest.scala:776)
	at kafka.server.AbstractFetcherThreadTest.testFetcherThreadHandlingPartitionFailureDuringAppending(AbstractFetcherThreadTest.scala:748)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
[2020-01-15 10:25:20,695] ERROR [mock-fetcher]: Unexpected error occurred during truncation for topic1-0 at offset 0 (kafka.server.AbstractFetcherThreadTest$$anon$12:76)
java.lang.Exception
	at kafka.server.AbstractFetcherThreadTest$$anon$12.truncate(AbstractFetcherThreadTest.scala:756)
	at kafka.server.AbstractFetcherThread.doTruncate(AbstractFetcherThread.scala:181)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeTruncateToEpochEndOffsets$1(AbstractFetcherThread.scala:254)
	at scala.collection.mutable.HashMap.$anonfun$foreach$1(HashMap.scala:149)
	at scala.collection.mutable.HashTable.foreachEntry(HashTable.scala:237)
	at scala.collection.mutable.HashTable.foreachEntry$(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:44)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:149)
	at kafka.server.AbstractFetcherThread.maybeTruncateToEpochEndOffsets(AbstractFetcherThread.scala:250)
	at kafka.server.AbstractFetcherThread.$anonfun$truncateToEpochEndOffsets$1(AbstractFetcherThread.scala:221)
	at kafka.server.AbstractFetcherThread.truncateToEpochEndOffsets(AbstractFetcherThread.scala:209)
	at kafka.server.AbstractFetcherThread.maybeTruncate(AbstractFetcherThread.scala:172)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:116)
	at kafka.server.AbstractFetcherThreadTest.verifyFetcherThreadHandlingPartitionFailure(AbstractFetcherThreadTest.scala:776)
	at kafka.server.AbstractFetcherThreadTest.testFetcherThreadHandlingPartitionFailureDuringTruncation(AbstractFetcherThreadTest.scala:762)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
[2020-01-15 10:25:20,699] ERROR [mock-fetcher]: Found invalid messages during fetch for partition topic-0 offset 0 (kafka.server.AbstractFetcherThreadTest$$anon$7:76)
org.apache.kafka.common.errors.CorruptRecordException: Record is corrupt (stored crc = 1836560778, computed crc = 1613825395)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>

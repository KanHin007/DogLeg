<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="kafka.zookeeper.ZooKeeperClientTest" tests="31" skipped="0" failures="0" errors="0" timestamp="2020-01-15T02:48:13" hostname="localhost" time="35.324">
  <properties/>
  <testcase name="testZNodeChangeHandlerForDataChange" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.438"/>
  <testcase name="testZooKeeperSessionStateMetric" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.428"/>
  <testcase name="testExceptionInBeforeInitializingSession" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.649"/>
  <testcase name="testGetChildrenExistingZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.406"/>
  <testcase name="testConnection" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.51"/>
  <testcase name="testZNodeChangeHandlerForCreation" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.403"/>
  <testcase name="testGetAclExistingZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.402"/>
  <testcase name="testSessionExpiryDuringClose" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.407"/>
  <testcase name="testSetAclNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.402"/>
  <testcase name="testConnectionLossRequestTermination" classname="kafka.zookeeper.ZooKeeperClientTest" time="11.397"/>
  <testcase name="testExistsNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.436"/>
  <testcase name="testGetDataNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.434"/>
  <testcase name="testConnectionTimeout" classname="kafka.zookeeper.ZooKeeperClientTest" time="3.496"/>
  <testcase name="testBlockOnRequestCompletionFromStateChangeHandler" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.647"/>
  <testcase name="testUnresolvableConnectString" classname="kafka.zookeeper.ZooKeeperClientTest" time="5.541"/>
  <testcase name="testGetChildrenNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.44"/>
  <testcase name="testPipelinedGetData" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.408"/>
  <testcase name="testZNodeChildChangeHandlerForChildChange" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.405"/>
  <testcase name="testGetChildrenExistingZNodeWithChildren" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.409"/>
  <testcase name="testSetDataExistingZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.4"/>
  <testcase name="testMixedPipeline" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.404"/>
  <testcase name="testGetDataExistingZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.407"/>
  <testcase name="testDeleteExistingZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.702"/>
  <testcase name="testSessionExpiry" classname="kafka.zookeeper.ZooKeeperClientTest" time="2.707"/>
  <testcase name="testSetDataNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.402"/>
  <testcase name="testDeleteNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.401"/>
  <testcase name="testExistsExistingZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.41"/>
  <testcase name="testZooKeeperStateChangeRateMetrics" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.404"/>
  <testcase name="testZNodeChangeHandlerForDeletion" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.403"/>
  <testcase name="testGetAclNonExistentZNode" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.409"/>
  <testcase name="testStateChangeHandlerForAuthFailure" classname="kafka.zookeeper.ZooKeeperClientTest" time="0.617"/>
  <system-out><![CDATA[[2020-01-15 10:48:14,472] ERROR [ZooKeeperClient] Uncaught error in handler kafka.zookeeper.ZooKeeperClientTest$$anon$7 (kafka.zookeeper.ZooKeeperClient:76)
java.lang.RuntimeException
	at kafka.zookeeper.ZooKeeperClientTest$$anon$7.beforeInitializingSession(ZooKeeperClientTest.scala:380)
	at kafka.zookeeper.ZooKeeperClient.callBeforeInitializingSession(ZooKeeperClient.scala:397)
	at kafka.zookeeper.ZooKeeperClient.$anonfun$reinitialize$1(ZooKeeperClient.scala:363)
	at kafka.zookeeper.ZooKeeperClient.$anonfun$reinitialize$1$adapted(ZooKeeperClient.scala:363)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.MapLike$DefaultValuesIterable.foreach(MapLike.scala:213)
	at kafka.zookeeper.ZooKeeperClient.reinitialize(ZooKeeperClient.scala:363)
	at kafka.zookeeper.ZooKeeperClient.forceReinitialize(ZooKeeperClient.scala:392)
	at kafka.zookeeper.ZooKeeperClientTest.testExceptionInBeforeInitializingSession(ZooKeeperClientTest.scala:398)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
[2020-01-15 10:48:38,853] ERROR Unable to resolve address: some.invalid.hostname.foo.bar.local:2181 (org.apache.zookeeper.client.StaticHostProvider:154)
java.net.UnknownHostException: some.invalid.hostname.foo.bar.local: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1277)
	at java.net.InetAddress.getAllByName(InetAddress.java:1193)
	at java.net.InetAddress.getAllByName(InetAddress.java:1127)
	at org.apache.zookeeper.client.StaticHostProvider$1.getAllByName(StaticHostProvider.java:92)
	at org.apache.zookeeper.client.StaticHostProvider.resolve(StaticHostProvider.java:147)
	at org.apache.zookeeper.client.StaticHostProvider.next(StaticHostProvider.java:375)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1137)
[2020-01-15 10:48:44,926] WARN Unable to reconnect to ZooKeeper service, session 0x10003bd1a100002 has expired (org.apache.zookeeper.ClientCnxn:1380)
[2020-01-15 10:48:48,072] WARN SASL configuration failed: javax.security.auth.login.LoginException: No JAAS configuration section named 'Client' was found in specified JAAS configuration file: 'no-such-file-exists.conf'. Will continue connection to Zookeeper server without SASL authentication, if Zookeeper server allows it. (org.apache.zookeeper.ClientCnxn:1094)
[2020-01-15 10:48:48,073] ERROR [ZooKeeperClient] Auth failed. (kafka.zookeeper.ZooKeeperClient:74)
[2020-01-15 10:48:48,177] WARN SASL configuration failed: javax.security.auth.login.LoginException: No JAAS configuration section named 'Client' was found in specified JAAS configuration file: 'no-such-file-exists.conf'. Will continue connection to Zookeeper server without SASL authentication, if Zookeeper server allows it. (org.apache.zookeeper.ClientCnxn:1094)
[2020-01-15 10:48:48,177] ERROR [ZooKeeperClient] Auth failed. (kafka.zookeeper.ZooKeeperClient:74)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
